{"version":3,"sources":["components/Navigations/Navigations.js","components/EntryForm/FormEntry.js","components/Wheel/Wheel.js","components/NowWheel/gallery1.js","components/NowWheel/NowWheel.js","components/FutureWheel/gallery2.js","components/FutureWheel/FutureWheel.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Navigations","className","EntryForm","state","name","surname","email","mobile","errorName","errorSurname","errorContact","formSend","handleUserName","event","setState","target","value","handleUserSurname","handleUserEmail","handleUserMobile","handleSubmit","mailReg","nameSurname","preventDefault","test","length","onSubmit","this","onChange","type","placeholder","style","color","fontSize","onClick","to","textDecoration","Component","Wheel","props","changeValue","counter","newSeries","series","console","log","data","isRendered","options","chart","dropShadow","enabled","blur","left","top","labels","title","text","stroke","width","fill","opacity","markers","size","reloaded","height","label","map","item","key","e","activeClass","spy","duration","smooth","id","Gallery","listaA","listaB","handleClick","index","filter","el","indexA","secondStyle","src","NowWheel","GalleryF","FutureWheel","NotFound","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a222524d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './Navigations.scss'\n\n\nfunction Navigations() {\n\n    return(\n        <nav className=\"around\">\n            <div className='menuWelcome'>\n              <h1>CREATE THE LIFE WORTH LIVING </h1>\n                <h4>KreivoPlan Kasia Nowacka</h4>\n            </div>\n\n        </nav>\n    )\n}\nexport default Navigations","import React, {Component} from \"react\";\nimport './EntryForm.scss'\nimport {NavLink} from \"react-router-dom\";\n\n\nclass EntryForm extends Component {\n    state = {\n        name: '',\n        surname: '',\n        email: '',\n        mobile: \"\",\n        errorName: false,\n        errorSurname: false,\n        errorContact: false,\n        formSend: false\n    };\n\n    handleUserName = (event) => {\n        this.setState({name: event.target.value})\n    };\n    handleUserSurname = (event) => {\n        this.setState({surname: event.target.value})\n    };\n    handleUserEmail = (event) => {\n        this.setState({email: event.target.value})\n    };\n    handleUserMobile = (event) => {\n        this.setState({mobile: event.target.value})\n    };\n    handleSubmit = (event) => {\n        this.setState({formSend:false});\n        this.setState({errorName:false});\n        this.setState({errorSurname:false});\n        this.setState({errorContact:false});\n\n        const mailReg = /^[0-9a-z_.-]+@[0-9a-z.-]+\\.[a-z]{2,3}$/i;\n        const nameSurname = /^[a-zA-Z]{2,}$/i;\n        let name = this.state.name;\n        let surname = this.state.surname;\n        let email = this.state.email;\n        let mobile =this.state.mobile;\n\n        event.preventDefault();\n        if (nameSurname.test(name)&& nameSurname.test(surname)&& mailReg.test(email)&& mobile.length >4){\n            this.setState({formSend:true})\n        }else {\n            if (!mailReg.test(email)){\n                this.setState({errorContact:true})\n            }\n            if (!nameSurname.test(name)){\n                this.setState({errorName:true})\n            }\n            if (!nameSurname.test(surname)){\n                this.setState({errorSurname:true})\n            }\n            if (mobile.length<4){\n                this.setState({errorContact:true})\n            }\n        }\n    };\n    render() {\n        return <>\n            <div  className='firstForm'>\n                <form className='form' onSubmit={this.handleSubmit}>\n                    <input name='name' onChange={this.handleUserName} type='text' value={this.state.name}\n                           placeholder='Enter Name'/>\n                    <label>Enter Name </label>\n                    {this.state.errorName && <p style={{color:'red', fontSize:'12px'}}>Please enter name</p>}\n                    <br/>\n                    <input name='surname' onChange={this.handleUserSurname} type='text'\n                           value={this.state.surname} placeholder='Enter Surname'/>\n                    <label >Enter Surname</label>\n                    {this.state.errorSurname && <p style={{color:'red', fontSize:'12px'}}>Please enter surname </p>}\n                    <br/>\n                    <input name='email' onChange={this.handleUserEmail} type='email' value={this.state.email}\n                           placeholder='Email'/>\n                    <input name='mobile' onChange={this.handleUserMobile} type='number'\n                           value={this.state.mobile} placeholder='Mobile Phone'/>\n                    <br/>\n                    <label> Method of contact: email or/and mobile phone</label>\n                    {this.state.errorContact && <p style={{color:'red', fontSize:'12px'}}>Please enter email or/and mobile phone</p>}\n                    <br/>\n                    <button onClick={this.state.formSend} className='greenBtn' type='submit' value={this.state.formSend}>Send</button>\n                    {this.state.formSend && <p>Thank you !</p>}\n                    <button className='greenBtn'><NavLink to=\"/now\" style={{textDecoration:'none', color:\"white\"}}>Go to your present life</NavLink></button>\n                </form>\n            </div>\n        </>\n    }\n}\n\nexport default EntryForm\n","import React, {Component} from 'react';\nimport {Link} from 'react-scroll';\nimport ReactApexChart from 'react-apexcharts'\nimport './Wheel.scss'\n\n\nclass Wheel extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isRendered: false,\n            counter: 0,\n            options: {\n                chart: {\n                    dropShadow: {\n                        enabled: true,\n                        blur: 1,\n                        left: 1,\n                        top: 1\n                    },\n                },\n                labels: ['Health', 'Money', 'Fun & Recreation', 'Significant Others/Romanse', 'Family & Friends', 'Career', 'Physical Environment', 'Personal Growth'],\n                title: {\n                    text: ''\n                },\n                stroke: {\n                    width: 1\n                },\n                fill: {\n                    opacity: 0.4\n                },\n                markers: {\n                    size: 0\n                }\n            },\n            series: [{\n                name: 'Money',\n                data: [0, 0, 0, 0, 0, 0, 0, 0],\n            }, {\n                name: 'Fun & Recreations',\n                data: [0, 0, 0, 0, 0, 0, 0, 0],\n            }, {\n                name: 'Sygnicant Others/Romance',\n                data: [0, 0, 0, 0, 0, 0, 0, 0],\n            }, {\n                name: 'Family & Friends',\n                data: [0, 0, 0, 0, 0, 0, 0, 0]\n            }, {\n                name: 'Career',\n                data: [0, 0, 0, 0, 0, 0, 0, 0]\n            }, {\n                name: 'Phisical Enviroment',\n                data: [0, 0, 0, 0, 0, 0, 0, 0]\n            }, {\n                name: 'Personal Growth',\n                data: [0, 0, 0, 0, 0, 0, 0, 0]\n            }, {\n                name: 'Health',\n                data: [0, 0, 0, 0, 0, 0, 0, 0]\n            },\n\n\n            ],\n            reloaded: 10\n        }\n    }\n    changeValue = (value) => {\n        if (this.state.counter != null) {\n\n            let counter = this.state.counter;\n            let newSeries = this.state.series;\n            console.log(value, newSeries[counter]);\n            if (counter === 7) {\n                newSeries[counter].data[0] = value;\n                newSeries[counter].data[7] = value;\n                this.setState({counter: counter + 1});\n\n            } else if (counter >7){\n                this.setState({counter: null});\n            }\n            else {\n                newSeries[counter].data[counter] = value;\n                newSeries[counter].data[counter + 1] = value;\n                this.setState({counter: counter + 1});\n            }\n            this.setState({series: newSeries});\n        }\n    };\n\n    render() {\n        const pointsScale = [{\n            label: \"1\",\n            value: 10\n        }, {\n            label: \"2\",\n            value: 20\n        }, {\n            label: \"3\",\n            value: 30\n        }, {\n            label: \"4\",\n            value: 40\n        }, {\n            label: \"5\",\n            value: 50\n        }, {\n            label: \"6\",\n            value: 60\n        }, {\n            label: \"7\",\n            value: 70\n        }, {\n            label: \"8\",\n            value: 80\n        }, {\n            label: \"9\",\n            value: 90\n        }, {\n            label: \"10\",\n            value: 100\n        }\n        ];\n\n        const chart = (this.state.isRendered) &&\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"radar\" height=\"550\"/>\n        const result = () => {\n            return this.setState({isRendered: true})\n        };\n        let placeholder;\n        if (this.state.counter > 7 || this.state.counter == null ) {\n            placeholder = <h2 className=\"nameState\">{\"Please click Wheel of Life\"}</h2>\n        } else {\n            placeholder = <h2 className=\"nameState\">{this.state.series[this.state.counter].name}</h2>\n        }\n        return (<div className='wheel'>\n            {placeholder}\n            <div className='buttons'>\n                {pointsScale.map((item) => <button className='numberButton' key={item.label} onClick={(e) => {\n                    this.changeValue(item.value)\n                }}>{item.label}</button>)}</div>\n                <button><Link activeClass ='active' to='chartW' spy={true} duration={500} smooth ={true} className='renderedChart' onClick={result}>Wheel of Life</Link></button>\n            <div id=\"chart\" name ='chartW'>\n                {chart}\n            </div>\n        </div>);\n    }\n}\nexport default Wheel","import React, {Component} from 'react';\nimport {Link} from 'react-scroll'\nimport './gallery1.scss'\n\nclass Gallery extends Component {\n    state ={\n        listaA : [\n             '/images/image00001.jpeg',\n            '/images/image00003.jpeg',\n            '/images/image00004.jpeg',\n            '/images/image00007.jpeg',\n            '/images/image00024.jpeg',\n            '/images/image00009.jpeg',\n            '/images/image00011.jpeg',\n            '/images/image00015.jpeg',\n            '/images/image00019.jpeg',\n            '/images/image00021.jpeg'\n        ],\n        listaB : [],\n        size: '150px'\n    };\n    handleClick = (index) => {\n        if(this.state.listaB.length<4){\n        this.setState( {\n            listaB:  [  ...this.state.listaB, this.state.listaA[index] ],\n            listaA: this.state.listaA.filter( (el,indexA) => indexA !== index  )\n        } );\n\n        this.setState({size:'250px'})}\n    }\n    render(){\n        let style ={\n        width:'150px',\n             height:'150px'};\n        let secondStyle ={\n            width: '250px',\n            height: '250px'\n        };\n\n        return (\n            <div className='frame'>\n                <button><Link to ='selectedPhotos' spy={true} smooth = {true} duration = {500}>Photos</Link></button>\n                <p name =\"selectedPhotos\">Selected photo</p>\n                <ul>\n                    {\n                        this.state.listaB.map( el => <li style ={secondStyle}>{<img style={secondStyle} src={el} />}</li> )\n                    }\n                </ul>\n                <hr/>\n                <ul>\n                {\n                    this.state.listaA.map( (el,index) => <li  onClick={() => this.handleClick(index)} >{\n                        <img style ={style}src={el} />\n                    }</li> )\n                }\n            </ul>\n            </div>\n        )\n    }\n}\nexport default Gallery\n\n\n\n\n\n","import React,{Component} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport Wheel from '../Wheel/Wheel'\nimport './NowWheel.scss'\nimport Gallery from \"./gallery1\";\n\nclass NowWheel extends Component{\n    render() {\n        return (<>\n            <div className='nowWheel'>\n              <h1>Think about your present life</h1>\n                <h3> Push the button with number how satisfied are you with in this segment of your life in this moment? ( 1 is very low ) </h3>\n                  <Wheel/>\n                <h2> Choice four photo which are close to your life in this moment</h2>\n                  <Gallery/>\n            </div>\n            <button className='greenBtn'><NavLink to=\"/future\" style={{textDecoration:'none', color:\"white\"}}>Future</NavLink></button>\n            </>)\n    }\n}\n\n export default NowWheel","import React, {Component} from 'react';\nimport '../NowWheel/gallery1.scss'\nimport {Link} from \"react-scroll\";\n\nclass GalleryF extends Component {\n    state ={\n        listaA : [\n            '/images/image00005.jpeg',\n            '/images/image00006.jpeg',\n            '/images/image00008.jpeg',\n            '/images/image00010.jpeg',\n            '/images/image00013.jpeg',\n            '/images/image00014.jpeg',\n            '/images/image00017.jpeg',\n            '/images/image00022.jpeg',\n            '/images/image00023.jpeg',\n            '/images/image00027.jpeg'\n        ],\n        listaB : [],\n        size: '150px'\n    };\n    handleClick = (index) => {\n        if(this.state.listaB.length<4){\n            this.setState( {\n                listaB:  [  ...this.state.listaB, this.state.listaA[index] ],\n                listaA: this.state.listaA.filter( (el,indexA) => indexA !== index  )\n            } );\n\n            this.setState({size:'250px'})}\n    };\n    render(){\n        let style ={\n            width:'150px',\n            height:'150px'};\n        let secondStyle ={\n            width: '250px',\n            height: '250px'\n        };\n        return (\n            <div className='frame'>\n                <button><Link to ='selectedPhotos' spy={true} smooth = {true} duration = {500}>Photos</Link></button>\n                <p name =\"selectedPhotos\">Selected photo</p>\n                <ul>\n                    {\n                        this.state.listaB.map( el => <li style ={secondStyle}>{<img style={secondStyle} src={el} />}</li> )\n                    }\n                </ul>\n                <hr/>\n                <ul>\n                    {\n                        this.state.listaA.map( (el,index) => <li  onClick={() => this.handleClick(index)} >{\n                            <img style ={style}src={el} />\n                        }</li> )\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\nexport default GalleryF\n","import React,{Component} from \"react\";\nimport './FutureWheel.scss'\nimport Wheel from '../Wheel/Wheel'\nimport GalleryF from './gallery2'\n\n\nclass FutureWheel extends Component{\n    render() {\n        return (<div className='futureText'>\n            <h1 >What do you expect to achieve after completing our program ? </h1>\n              <Wheel/>\n              <h2>Choice four photo which should be showing your life in the future</h2>\n                <GalleryF/>\n            <p>Thank you for your cooperation ! </p>\n            <p>Your answers help us to starting work to improve your life</p>\n        </div>)\n    }\n}\nexport default FutureWheel","import React,{Component} from 'react';\n\n\nimport {HashRouter, Link, Switch, Route} from \"react-router-dom\";\nimport './App.scss';\nimport Navigations from '../Navigations/Navigations'\nimport EntryForm from \"../EntryForm/FormEntry\"\nimport NowWheel from \"../NowWheel/NowWheel\"\nimport FutureWheel from \"../FutureWheel/FutureWheel\"\nimport './App.scss'\n\n\n\nconst NotFound =()=> <h2>404 strony nie znaleziono</h2>;\n\nfunction App() {\n  return (\n      <HashRouter>\n        <Navigations />\n        <Switch>\n          <Route exact path ='/' component = {EntryForm}/>\n          <Route path = '/now' component = {NowWheel}/>\n          <Route path = '/future' component = {FutureWheel}/>\n            <Route component ={NotFound}/>\n\n\n\n        </Switch>\n\n\n\n      </HashRouter>)\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}